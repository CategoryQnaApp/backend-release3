[Type] title (#이슈번호)
# [Header]
# 형식 - [Type] title (#이슈번호)
#
# [Type] 입력 목록
#  1. Feat     : 새로운 기능 추가
#  2. Fix      : 오류 해결
#  3. Rename   : 파일 혹은 폴더명을 수정만 한 경우
#  4. Remove   : 파일을 삭제만 한 경우
#  5. Style    : 기능 수정 없이 코드 스타일만 변경한 경우 (코드 포매팅, 세미콜론 누락 등)
#  6. Design   : 사용자 UI 디자인 변경 (CSS 등)
#  7. Refactor : 코드 리팩토링 (Refactoring)
#  8. Test     : 테스트 코드 추가/수정
#  9. Docs     : 문서화에 관한 모든 것
#  10. Chore   : 빌드 업무, 패키지 매니저 수정 (예: gitignore 수정)
#  11. Perf    : 성능 개선
#
# [Title] 규칙
#  1. 50자 이내 짧은 요약 (영어의 경우 첫글자는 대문자로)
#  2. 명령형으로 작성 (예: Add user login, Fix crash)
#  3. 과거형 사용 금지 (예: Added, Fixed ❌)
#  4. 제목 끝에 .(마침표) 금지
#
# [Body] 작성 규칙
#  1. 제목과 본문 사이 빈 칸 한줄 필수
#  2. 본문은 생략 가능, 필요 시 자세한 설명 작성 (72자 내외 권장)
#  3. 적용한 변경사항과 그것을 만든 이유에 대해 설명("어떻게" 보다는 "무엇을", "왜" 변경했는지 설명)
#  4. 여러 줄로 구분 가능, 가독성 있게 작성

# 예시:
# Feat: 사용자 로그인 기능 구현 (#123)
#
# OAuth2를 활용하여 사용자 로그인 기능을 구현했습니다.
# 로그인 성공 시 사용자 정보를 서버에 저장하고,
# 로그인 상태 유지 기능도 포함했습니다.
